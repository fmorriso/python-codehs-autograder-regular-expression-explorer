import re

    def expect_min_unique_instances(self, class_name: str, min_instances: int = 2) -> bool:
        # the following line IS COMPLETELY BOGUS AND SHOULD NOT BE NECESSARY BUT THE CODE FAILS WITH A BOGUS SYNTAX ERROR WITHOUT IT!!!
        code_without_comments = self.code_without_comments
        pattern = f"\\b\\w+\\s*=\\s*{class_name}\\s*\\("
        matches = re.findall(pattern, code_without_comments)
        if re.search(pattern, code_without_comments) is None:
            return False # none at all - really bad!!
        # logic to see how many unique instances were created
        var_names = {}
        for match in matches:
            pieces = match.split()
            #print(f'{pieces=}')
            var_name = pieces[0]
            if var_name in var_names.keys():
                var_names[var_name] += 1
            else:
                var_names[var_name] = 1

        return len(var_names.keys()) >= min_instances

===========================================================

        expect(self.expect_min_unique_instances('Parallelogram', 2)).to_be_truthy().with_options(
            test_name='You should create two unique instances',
            student_output=student_code,
        )

 ===========================================================
     def created_a_default_instance(self, class_name: str) -> bool:
        """check to see there is an instance of the specified class name using the default constructor"""
        # the following line IS COMPLETELY BOGUS AND SHOULD NOT BE NECESSARY BUT THE CODE FAILS WITH A BOGUS SYNTAX ERROR WITHOUT IT!!!
        code_without_comments = self.code_without_comments
        pattern = f'\\b\\w+\\s*=\\s*{class_name}\\s*\\(\\s*\\)'
        if re.search(pattern, code_without_comments) is None:
            return False # really bad if there are no instances at all
        return True
 ===========================================================
        expect(self.created_a_default_instance('Parallelogram')).to_be_truthy().with_options(
            test_name='You should created an instance with the default constructor',
            student_output=student_code,
        )
